# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

project_name: taskmanager

before:
  hooks:
    - go mod tidy
    - go generate ./...

builds:
  - <<: &build_defaults
      binary: bin/task
      main: ./cmd/task
    id: macos
    goos: [darwin]
    goarch: [amd64]
  - <<: *build_defaults
    id: linux
    goos: [linux]
    goarch: [amd64]
    env:
      - CGO_ENABLED=1
  - <<: *build_defaults
    id: windows
    goos: [windows]
    goarch: [amd64]
    env:
      - CGO_ENABLED=1
      - CC=x86_64-w64-mingw32-gcc

archives:
  - id: nix
    builds: [macos, linux]
    <<: &archive_defaults
      name_template: >-
        {{- .ProjectName }}_
        {{- title .Os }}_
        {{- if eq .Arch "amd64" }}x86_64
        {{- else if eq .Arch "386" }}i386
        {{- else }}{{ .Arch }}{{ end }}
        {{- if .Arm }}v{{ .Arm }}{{ end -}}
    wrap_in_directory: true
    format: tar.gz
    files:
      - LICENSE
      - README.txt
  - id: windows
    builds: [windows]
    <<: *archive_defaults
    wrap_in_directory: false
    format: zip
    files:
      - LICENSE
      - README.txt

release:
  prerelease: auto

checksum:
  name_template: 'checksums.txt'

snapshot:
  version_template: '{{ incpatch .Version }}-next'

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"


# REFERENCES:
# GoReleaser no remote configure to life refs from #2755
# https://github.com/orgs/goreleaser/discussions/2755

# git init
# git add .
# git branch -M main
# git remote add origin https://github.com/emarifer/go-cli-bubbletea-todoapp.git

# COMMANDS:
# goreleaser init
# goreleaser release --snapshot --clean
# goreleaser check

# git tag 1.0.0 && git push --tags
